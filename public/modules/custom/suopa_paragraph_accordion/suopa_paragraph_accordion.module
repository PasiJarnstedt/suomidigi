<?php

/**
 * @file
 * Module implementing accordion functionality in paragraphs when editing.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Helper function to check if a string ends with another string.
 */
function ends_with($haystack, $needle) {
  $length = strlen($needle);

  return $length === 0 ||
    (substr($haystack, -$length) === $needle);
}

/**
 * Helper function to add class to subforms.
 *
 * @param $form
 *   Form (or subforms).
 * @param string $field_name
 *   Field name.
 *
 * @return array
 *   Retuns form or subforms.
 */
function _prodive_subform_class($form, $field_name = 'field_paragraphs') {
  if (array_key_exists($field_name, $form) && array_key_exists('widget', $form[$field_name])) {
    foreach ($form[$field_name]['widget'] as &$item) {
      if (is_array($item) && array_key_exists('subform', $item) && array_key_exists('#type', $item) && $item['#type'] == 'container') {
        array_push($item['subform']['#attributes']['class'], 'paragraph-accordion-panel');

        foreach($item['subform'] as $k => $i) {
          if (is_array($i) && array_key_exists('#type', $i) && $i['#type'] == 'container') {
            $item['subform'] = _prodive_subform_class($item['subform'], $k);
          }
        }
      }
    }
  }

  return $form;
}

/**
 * Implements hook_form_alter().
 */
function suopa_paragraph_accordion_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (ends_with($form_id, '_edit_form')) {
    $form['#attached']['library'][] = 'suopa_paragraph_accordion/paragraph-accordion';
    $form = _prodive_subform_class($form);
  }
}
